// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url   	= env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// Tabellenname PascalCase und Singular
model Playlist {
  id   	    String   @id @default(uuid()) // Kryptische Strings ohne Reihenfolge als ID
  created   DateTime @default(now())
  updated   DateTime @default(now())
  name      String
  recordings  Json  //we save the playlist as a json object for now, maybe later makes more sense to have a better representation
  public    Boolean @default(false)
  user   	  User	@relation(fields: [userId], references: [id])
  userId    String
}

model User {
  id   	    String   @id @default(uuid()) // Kryptische Strings ohne Reihenfolge als ID
  created   DateTime @default(now())
  updated   DateTime @default(now())  
  email	    String   @unique //connect this to the Auth provider later
  playlist     Playlist[] // 1:n Relation

}